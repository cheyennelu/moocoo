<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
<div class="big-player-container">
  <div class="container player-container">
    <div id="player" data-video-id="<%= @video.youtube_id %> ">
    </div>
  </div>
  <div class="annotations">
    <% @video.annotations.each_with_index do |annotation, index|  %>
    <div class="annotation" id="annotation-<%= index + 1 %>" data-time-start="<%= annotation.time_start %>" data-time-end="<%= annotation.time_end %>" data-x-coordinate="<%= annotation.x_coordinate %>" data-y-coordinate="<%= annotation.y_coordinate %>">
      <span class="annotation-button"><i class="fas fa-circle"></i></span>
      <div class="annotation-product px-1" id="annotation-product-<%= index + 1 %>">
        <%= annotation.product.name %> -
        <%= humanized_money_with_symbol annotation.product.price %>
        <span class="annotation-add-to-cart pl-1" id="annotation-add-to-cart-<%= index + 1 %>" data-product-id="<%= annotation.product.id%>"><i class="fas fa-cart-plus"></i></span>
      </div>
    </div>
    <% end %>
  </div>
</div>

<script>
if (window.tag) {
location.reload();
}

window.player = null;

window.onYouTubeIframeAPIReady = function() {
  player = new YT.Player('player', {
    height: 9/16*350,
    width: 350,
    videoId: "<%= @video.youtube_id %>" ,
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}

window.onPlayerReady = function(event) {
  console.log("PLAYER READY");
}

window.onPlayerStateChange = function(event) {
  if(event.data == YT.PlayerState.PLAYING) {
  }
}

window.tag = document.createElement('script');
window.tag.src = "https://www.youtube.com/iframe_api"; // Create source to script
window.firstScriptTag = document.getElementsByTagName('script')[0]; // Get the first <script> on <head></head>!
window.firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); // Insert the script src=youtube to <head></head> -> Calling script which you can try by opening "https://www.youtube.com/iframe_api"
console.log(tag);
console.log(firstScriptTag);
console.log(firstScriptTag.parentNode);
console.log(firstScriptTag.parentNode.insertBefore(tag, firstScriptTag));

// This script is to inject the youtube player iframe ready on our player
// 2. This code loads the IFrame Player API code asynchronously.
// var tag = document.createElement('script');
// let getVideoId = document.querySelector("#player").dataset.videoId;
// tag.src = "https://www.youtube.com/iframe_api";
// var firstScriptTag = document.getElementsByTagName('script')[0];
// firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// // 2a. Set the player size
// var widthMultiplier = 0.8;
// if (window.innerWidth <= 480) {
//   widthMultiplier = 0.92;
// }

// var playerWidth = widthMultiplier * window.innerWidth;
// var playerHeight = 9/16*playerWidth;

// // 3. This function creates an <iframe> (and YouTube player)
// //    after the API code downloads.
// var player;
// function onYouTubeIframeAPIReady() {
//   player = new YT.Player('player', {
//     height: 390,
//     width: 640,
//     videoId: getVideoId,
//     events: {
//       'onReady': onPlayerReady,
//       'onStateChange': onPlayerStateChange
//     }
//   });

//   function onPlayerReady(event) {
//     console.log("PLAYER READY");
//     event.target.playVideo();
//   }

//   function onPlayerStateChange(event) {
//     if(event.data == YT.PlayerState.PLAYING) {
//     }
//   }
// }
</script>

<script>
  window.setTimeout(function() {printTime()}, 1000);
  const printTime = () => {
    console.log(player.getCurrentTime());
  }
</script>

<div class="container">
  <div class="card-video-index">
    <div class="card-video-index-infos">
      <div>
        <h2 style="font-size: 14px;"><%= @video.title %></h2>
        <p style="font-size: 14px; padding-top: 2px;"><%= @video.creator %></p>
      </div>
      <i class="fa fa-thumbs-up" aria-hidden="true"></i> <%=  number_with_delimiter(@video.likes, :delimiter => ',') %>
      <i class="fa fa-eye"  aria-hidden="true"></i> <%= number_with_delimiter(@video.views, :delimiter => ',') %>
    </div>
  </div>
</div>
<div class="container shop">
  <p class="title" style="font-size: 18px; text-align: center;">Shop the Look</p>
    <% @products.each do |prod| %>
    <div class="card-video card-prod">
      <img src="https://raw.githubusercontent.com/lewagon/fullstack-images/master/uikit/skateboard.jpg" />
      <div class="card-video-infos">
        <h2><%= link_to prod.name, prod %></h2>
        <p><%= prod.description %></p>
      </div>
      <div class="card-video-infos info-right">
        <h2>$<%= prod.price %></h2>

        <%= simple_form_for(@order, method: :post, url: orders_path) do |f| %>
        <%= f.input :product,  :as => :hidden, :input_html => { :value => prod } %>
        <%= f.input :quantity, label: false, :collection => 1..12, :prompt => "-- Select Quantity --"%>
        <%= f.input :user,  :as => :hidden, :input_html => { :value => current_user }%>
        <%= button_tag type: 'submit', class: "cart" do %>
        <i class="fa fa-shopping-cart" aria-hidden="true"></i>
        <% end %>
        <% end %>
      </div>
    </div>
    <% end %>
</div>
